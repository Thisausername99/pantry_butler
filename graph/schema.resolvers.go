package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"
	"fmt"
	"strconv"

	"github.com/thisausername99/recipes-api/graph/model"
)

// UpsertEntry is the resolver for the upsertEntry field.
func (r *mutationResolver) UpsertEntry(ctx context.Context, input model.PantryEntryInput) (*model.PantryEntry, error) {
	// panic(fmt.Errorf("not implemented: UpsertEntry - upsertEntry"))
	id := input.ID
	var entry model.PantryEntry
	entry.Name = input.Name

	n := len(r.Resolver.EntryStore)
	if n == 0 {
		r.Resolver.EntryStore = make(map[string]model.PantryEntry)
	}

	if id != nil {
		_, ok := r.Resolver.EntryStore[*id]
		if !ok {
			return nil, fmt.Errorf("not found")
		}
		r.Resolver.EntryStore[*id] = entry
	} else {
		// generate unique id
		nid := strconv.Itoa(n + 1)
		entry.ID = nid

		// pass in expiration
		if input.Expiration != nil {
			entry.Expiration = input.Expiration
		}

		// pass in quantity
		if input.Quantity != nil {
			entry.Quantity = *input.Quantity
		}

		entry.Name = input.Name
		r.Resolver.EntryStore[nid] = entry
	}

	return &entry, nil
}

// Recipes is the resolver for the recipes field.
func (r *queryResolver) Recipes(ctx context.Context, input model.RecipeInput) ([]*model.Recipe, error) {
	panic(fmt.Errorf("not implemented: Recipes - recipes"))
	// var recipes []*model.Recipe
	//Should call an ORM layer to retrieve from database
	// recipes = append(recipes)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
var recipes = []*model.Recipe{
	{}, {}, {},
}
