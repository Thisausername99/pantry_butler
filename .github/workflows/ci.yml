name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop, feature/* ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Run linter
      run: |
        go install golang.org/x/lint/golint@latest
        golint ./...

    - name: Run tests
      run: |
        go test -v ./...
        go test -v -race ./...

    - name: Run vet
      run: go vet ./...

    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Please run 'gofmt -s -w .'"
          exit 1
        fi

    - name: Build application
      run: go build -v ./cmd/pantry_butler

    - name: Generate GraphQL code
      run: |
        go install github.com/99designs/gqlgen@latest
        go run github.com/99designs/gqlgen generate

    - name: Generate mocks
      run: |
        go install github.com/golang/mock/mockgen@latest
        go generate ./internal/mocks

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run security scan
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t pantry-butler:latest .

    - name: Test Docker image
      run: |
        docker run --rm pantry-butler:latest --help || true 